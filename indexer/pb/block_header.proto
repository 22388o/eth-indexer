syntax = "proto3";

package pb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;

message BlockHeader {
    uint64 ID = 1
    [
        (gogoproto.jsontag) = "id,omitempty",
        (gogoproto.moretags) = "gorm:\"primary_key\" deepequal:\"-\""
    ];

    string parent_hash = 2
    [
        (gogoproto.jsontag) = "parent_hash,omitempty",
        (gogoproto.moretags) = "gorm:\"column:parent_hash;size:255\""
    ];

    string uncle_hash = 3
    [
        (gogoproto.jsontag) = "uncle_hash,omitempty",
        (gogoproto.moretags) = "gorm:\"column:uncle_hash;size:255\""
    ];

    string coinbase = 4
    [
        (gogoproto.jsontag) = "coinbase,omitempty",
        (gogoproto.moretags) = "gorm:\"column:coinbase;size:255\""
    ];

    string root = 5
    [
        (gogoproto.jsontag) = "root,omitempty",
        (gogoproto.moretags) = "gorm:\"column:root;size:255\""
    ];

    string tx_hash = 6
    [
        (gogoproto.jsontag) = "tx_hash,omitempty",
        (gogoproto.moretags) = "gorm:\"column:tx_hash;size:255\""
    ];

    string receipt_hash = 7
    [
        (gogoproto.jsontag) = "receipt_hash,omitempty",
        (gogoproto.moretags) = "gorm:\"column:receipt_hash;size:255\""
    ];

    bytes bloom = 8
    [
        (gogoproto.jsontag) = "bloom,omitempty",
        (gogoproto.moretags) = "gorm:\"column:bloom\""
    ];

    int64 difficulty = 9
    [
        (gogoproto.jsontag) = "difficulty,omitempty",
        (gogoproto.moretags) = "gorm:\"column:difficulty\""
    ];

    int64 number = 10
    [
        (gogoproto.jsontag) = "number,omitempty",
        (gogoproto.moretags) = "gorm:\"column:number\""
    ];

    uint64 gas_limit = 11
    [
        (gogoproto.jsontag) = "gas_limit,omitempty",
        (gogoproto.moretags) = "gorm:\"column:gas_limit\""
    ];

    uint64 gas_used = 12
    [
        (gogoproto.jsontag) = "gas_used,omitempty",
        (gogoproto.moretags) = "gorm:\"column:gas_used\""
    ];

    uint64 time = 13
    [
        (gogoproto.jsontag) = "time,omitempty",
        (gogoproto.moretags) = "gorm:\"column:time\""
    ];

    bytes extra_data = 14
    [
        (gogoproto.jsontag) = "extra_data,omitempty",
        (gogoproto.moretags) = "gorm:\"column:extra_data\""
    ];

    string mix_digest = 15
    [
        (gogoproto.jsontag) = "mix_digest,omitempty",
        (gogoproto.moretags) = "gorm:\"column:mix_digest\""
    ];

    bytes nonce = 16
    [
        (gogoproto.jsontag) = "nonce,omitempty",
        (gogoproto.moretags) = "gorm:\"column:nonce\""
    ];
    // golang database/sql driver doesn't support uint64, so store the nonce by bytes in db
    // https://github.com/golang/go/issues/6113
    // https://github.com/golang/go/issues/9373
}
