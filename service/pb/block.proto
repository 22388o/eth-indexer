syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/maichain/eth-indexer/service/pb/transaction.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;

message BlockQueryRequest {
  string hash = 1;
  int64 number = 2;
}

message BlockQueryResponse {
  Block block = 1;
  repeated Transaction txs = 2;
}

message Block {
  string hash = 1 [(gogoproto.jsontag) = "hash"];
  int64 number = 2 [(gogoproto.jsontag) = "number"];
  bytes nonce = 3 [(gogoproto.jsontag) = "nonce"];
}

service BlockService {
  rpc GetBlockByHash(BlockQueryRequest) returns (BlockQueryResponse) {
    option (google.api.http) = {
      get: "/v1/blocks/hash/{hash}"
    };
  }

  rpc GetBlockByNumber(BlockQueryRequest) returns (BlockQueryResponse) {
      option (google.api.http) = {
      get: "/v1/blocks/number/{number}"
    };
  }
}
